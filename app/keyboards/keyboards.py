from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from aiogram.types.web_app_info import WebAppInfo
from database.models import User

 



def start_kb():
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(text='–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è', callback_data='user_reg'))
    return kb.adjust(1).as_markup()


def change_data():
    kb = InlineKeyboardBuilder()
    kb.button(text='–ó–º—ñ–Ω–∏—Ç–∏‚öô', callback_data='change_data')
    return kb.adjust(1).as_markup()

def menu(status: str):
    kb = ReplyKeyboardBuilder()
    if not status == 'admin':
        kb.add(KeyboardButton(text='–ó–∞–ø–∏—Å–∞—Ç–∏—Å—å', web_app=WebAppInfo(url='https://bambuk082.github.io/site-for-tg-bot/')))
    
    kb.button(text='–ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å')
    kb.button(text='–ö–æ–Ω—Ç–∞–∫—Ç–∏')

    if status == 'admin':
        kb.add(KeyboardButton(text='–î–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞'))
        
    kb.adjust(*( (2, 1) if status == 'admin' else (1, 2) ))

    return kb.as_markup(resize_keyboard=True)



def admin_menu(admin_is_created):
    kb = ReplyKeyboardBuilder()
    if admin_is_created:
        kb.button(text='–ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
    
    if not admin_is_created:
        kb.add(KeyboardButton(text='–°—Ç–≤–æ—Ä–∏—Ç–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞'))
    kb.button(text='–ù–∞–∑–∞–¥üîô')

    return kb.adjust(2).as_markup(resize_keyboard=True)
        

def change_data_admin():
    kb = InlineKeyboardBuilder()
    kb.button(text='–ó–º—ñ–Ω–∏—Ç–∏ —ñ–º\'—è', callback_data='change_name_admin')
    kb.button(text='–ó–º—ñ–Ω–∏—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É', callback_data='change_phone_number_admin')
    kb.button(text='–ó–º—ñ–Ω–∏—Ç–∏ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É', callback_data='change_email_admin')
    kb.button(text='–ù–∞–∑–∞–¥', callback_data='back')
    
    return kb.adjust(1).as_markup()

def change_data_user():
    kb = InlineKeyboardBuilder()
    kb.button(text='–ó–º—ñ–Ω–∏—Ç–∏ —ñ–º\'—è', callback_data='user_change_name')
    kb.button(text='–ó–º—ñ–Ω–∏—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É', callback_data='user_change_phone_number')
    kb.button(text='–ó–º—ñ–Ω–∏—Ç–∏ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É', callback_data='user_change_email')
    kb.button(text='–ù–∞–∑–∞–¥', callback_data='back')
    
    return kb.adjust(1).as_markup()


def registration_admin_end():
    kb = InlineKeyboardBuilder()
    kb.button(text='–ó–º—ñ–Ω–∏—Ç–∏‚úè', callback_data='change_admin')
    kb.button(text='–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏!‚úÖ', callback_data='confirm_admin')
    
    return kb.adjust(2).as_markup()

def registration_user_end():
    kb = InlineKeyboardBuilder()
    kb.button(text='–ó–º—ñ–Ω–∏—Ç–∏‚úè', callback_data='change_user')
    kb.button(text='–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏!‚úÖ', callback_data='confirm_user')
    
    return kb.adjust(2).as_markup()

def registration_contact_end():
    kb = InlineKeyboardBuilder()
    kb.button(text='–ó–º—ñ–Ω–∏—Ç–∏‚úè', callback_data='change_contact')
    kb.button(text='–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏!‚úÖ', callback_data='confirm_contact')
    
    return kb.adjust(2).as_markup()

# –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
class Reg_menu():
    def __init__(self):
        pass
    # –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó # 
    def name_reply(self, status):
        kb = ReplyKeyboardBuilder()
        kb.button(text='–í—Å—Ç–∞–≤–∏—Ç–∏ —ñ–º\'—è')
        if status == 'admin':
            kb.button(text='–ù–∞–∑–∞–¥üîô')
        return kb.adjust(2).as_markup(resize_keyboard=True)

    def phone_number_reply(self):
        kb = ReplyKeyboardBuilder()
        kb.button(text='–í—Å—Ç–∞–≤–∏—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É', request_contact=True)
        kb.button(text='–ù–∞–∑–∞–¥üîô')
        return kb.adjust(2).as_markup(resize_keyboard=True)

    def email_reply(self):
        kb = ReplyKeyboardBuilder()
        kb.button(text='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏')
        kb.button(text='–ù–∞–∑–∞–¥üîô')
        return kb.adjust(2).as_markup(resize_keyboard=True)
    
    # –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –∑–º—ñ–Ω–∏ –¥–∞–Ω–∏—Ö —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó #
    def change_name_reply(self):
        kb = ReplyKeyboardBuilder()
        kb.button(text='–í—Å—Ç–∞–≤–∏—Ç–∏ —ñ–º\'—è')
        return kb.adjust().as_markup(resize_keyboard=True)

    def change_phone_number_reply(self):
        kb = ReplyKeyboardBuilder()
        kb.button(text='–í—Å—Ç–∞–≤–∏—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É', request_contact=True)
        return kb.adjust().as_markup(resize_keyboard=True)

    def change_email_reply(self):
        kb = ReplyKeyboardBuilder()
        kb.button(text='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏')
        return kb.adjust().as_markup(resize_keyboard=True)


def get_record_date():
    kb = InlineKeyboardBuilder()
    kb.button(text='–û—Ç—Ä–∏–º–∞—Ç–∏', callback_data='get')
    kb.button(text='–ù–∞–∑–∞–¥üîô', callback_data='back')
    
    return kb.adjust(2).as_markup()